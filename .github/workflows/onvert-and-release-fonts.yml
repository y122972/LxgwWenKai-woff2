name: Convert and Release LXGW WenKai Fonts to WOFF2

on:
  # 手动触发
  workflow_dispatch:
  # 定时触发 (每周一检查一次)
  schedule:
    - cron: '0 0 * * 1'

jobs:
  convert-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential git
    
    - name: Get latest release info from LXGW WenKai
      id: lxgw_release
      uses: actions/github-script@v6
      with:
        script: |
          const release = await github.rest.repos.getLatestRelease({
            owner: 'lxgw',
            repo: 'LxgwWenKai'
          });
          
          const version = release.data.tag_name;
          console.log(`Latest version: ${version}`);
          
          return {
            version: version,
            release_id: release.data.id,
            assets: release.data.assets.map(asset => ({
              name: asset.name,
              url: asset.browser_download_url
            }))
          };
    
    - name: Create fonts directory
      run: mkdir -p fonts/ttf fonts/woff2
      
    - name: Download TTF files
      run: |
        FONT_FILES=(
          "LXGWWenKai-Light.ttf"
          "LXGWWenKai-Regular.ttf"
          "LXGWWenKai-Medium.ttf"
          "LXGWWenKaiMono-Light.ttf"
          "LXGWWenKaiMono-Regular.ttf"
          "LXGWWenKaiMono-Medium.ttf"
        )
        
        VERSION="${{ fromJson(steps.lxgw_release.outputs.result).version }}"
        ASSETS="${{ toJson(fromJson(steps.lxgw_release.outputs.result).assets) }}"
        
        for FONT_FILE in "${FONT_FILES[@]}"; do
          echo "Processing $FONT_FILE"
          DOWNLOAD_URL=$(echo $ASSETS | jq -r '.[] | select(.name | contains("'"$FONT_FILE"'")) | .url' | head -n 1)
          
          if [ -n "$DOWNLOAD_URL" ]; then
            echo "Downloading $FONT_FILE from $DOWNLOAD_URL"
            curl -L "$DOWNLOAD_URL" -o "fonts/ttf/$FONT_FILE"
          else
            echo "Warning: $FONT_FILE not found in release assets"
          fi
        done
    
    - name: Install woff2 tool
      run: |
        git clone --recursive https://github.com/google/woff2.git
        cd woff2
        mkdir out
        cd out
        cmake ..
        make
        sudo make install
        cd ../..
    
    - name: Convert TTF to WOFF2
      run: |
        cd fonts/ttf
        for file in *.ttf; do
          if [ -f "$file" ]; then
            echo "Converting $file to WOFF2"
            woff2_compress "$file"
            mv "${file%.ttf}.woff2" "../woff2/"
          fi
        done
        cd ../..
    
    - name: List converted files
      run: ls -la fonts/woff2/
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: lxgw-woff2-${{ fromJson(steps.lxgw_release.outputs.result).version }}
        release_name: LXGW WenKai WOFF2 Fonts ${{ fromJson(steps.lxgw_release.outputs.result).version }}
        body: |
          WOFF2 version of LXGW WenKai fonts, converted from version ${{ fromJson(steps.lxgw_release.outputs.result).version }}
          
          Original fonts: https://github.com/lxgw/LxgwWenKai/releases/tag/${{ fromJson(steps.lxgw_release.outputs.result).version }}
        draft: false
        prerelease: false
    
    - name: Upload WOFF2 assets
      run: |
        for file in fonts/woff2/*.woff2; do
          if [ -f "$file" ]; then
            filename=$(basename "$file")
            echo "Uploading $filename to release"
            gh release upload "lxgw-woff2-${{ fromJson(steps.lxgw_release.outputs.result).version }}" "$file" --clobber
          fi
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}